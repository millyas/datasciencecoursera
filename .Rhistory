library("swirl")
swirl()
install_from_swirl("R Programming")
swirl()
install_from_swirl("R Programming")
install.packages("swirl")
swirl()
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
znew<-c(z,555)
znew<-c(z,555,z)
c(z,555,z)
z*2+100
my_sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,34)+c(0,10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dir()
?list.files
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest2.R")
file.rename("mytest.R" to "mytest2.R")
args(file.renam)
args(file.rename)
file.rename("mytest.R","mytest2.R")
args(file.copy)
file.copy("mytest2.R","mytest3.R")
args(file.path)
file.path("mytest3.R")
file.path(folder1,folder2)
file.path("mytest2.R","mytest3.R")
file.path("folder1","folder2")
?dir.create
?dir.create
skip()
?unlink
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name<-c(my_char,"Illyas")
my_name
paste(my_name,collapse=" ")
paste("Hello","World!",sep=" ")
paste("Hello","world!",sep= " ")
paste(1:3,c("x","y","z",sep=""))
paste(1:3,c("X","Y","Z",sep=""))
paste(1:3,c("x","y","z"),sep="")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,10000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(is.na(my_data)=TRUE)
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)& x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-c(1:20)
my_vector(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
matrix(1:20,nrow=4,ncol=5)
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","gina","kelly","sean")
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cnames,my_data)
?colnames
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!5==7
FALSE &FALSE
TRUE & C(TRUE,FALSE,FALSE)
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5>8||6!=8 && 4>3.9
isTRUE(6>4)
identical('twins')
identical('twins','twins')
xor(5==6,!FALSE)
ints<-sample)10
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
sys.date()
?sys.date
??sys.date
sys.time
sys.time()
sys.date()
sys.date
sys.date()
skip*
skip()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1],c(8,4,0)})
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
telegram(fuck you)
telegram("fuck you")
submit()
submit()
mad_libs(prague,fuckers,cock)
mad_libs("prague","fuckers","cock")
submit()
I %p% love %p% R
"I" %p% "love" %p% "R"
"I"%p%"love"%p%"R"
"I"%p%"love"%p%"R"
"I"%p%"love"%p%"R"
"I"%p%"love"%p%"R"
"I" %p% "love" %p% "R"
%p% "I" %p% "love" %p% "R" %p%
"I" %p% "love" %p% "R"
info()
main()
'I'%p% 'love'%p% 'R'
main()
Sys.date()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("programming","is","fun!")
paste("Programming","is","fun!")
submit()
telegram("fuck you")
submit()
submit()
submit()
submit()
mad_libs("prague","fucking","TV")
submit()
"I"%p% "love" %p% "R"
skip()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(lapply(cls_list))
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(x) x[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plany)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,nrow=10)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
info()
main()
main()
?sample
sample(1:6,4,replace=TRUE
)
sample(1:6,4,replace=TRUE
)
sample(1:20,10)
LETTERS()
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(filps==1)
sum(flips==1)
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,size=100,prob=0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
rpois(5,mean=10)
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
2
main()
dl<-Sys.Date()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POIXlt(Sys.time())
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quareters(t2)
quarters(t2)
t3<-c("October 17, 1986 08:24")
t3<-"October 17, 1986 08:24"
t4<-strptime(t3,"%B %d,%Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
data(cars)
?cars
head(cars)
dim(cars)
names(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist,xlab="Speed")
plot(x = cars$speed, y = cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist,xlab="Speed",ylab="Stopping Distance",main="My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=C(10,15))
plot(cars, xlim = C(10,15))
plot(cars, xlim = c(10,15))
plot(cars,pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
bye()
quit()
k=c(5:10,length=1000)
k
k<-5:10,length=1000
k<-c(5:10,length=1000)
k
attributes(c)
k<-vector(5,10,length=1000)
args(vector)
k<-numeric(5,10,len=1000)
?vector
k<-matrix(5:10,nrow=1000,ncol=1)
library(swirl)
swirl()
skip()
skip()
tf
x<-num_vect>=6
num_vect >= 6
skip()
bye()
?c
?numeric
x<-c(5:10,by=2)
x
length(x)
sample(5,10,size=1000)
?vector
search()
library(datasets)
datasets
datasets()
load(datasets)
open(datasets)
data(datasets)
view(datasets)
ls(datasets)
data()
data(AirPassengers)
AirPassengers
rom.names(AirPassengers)
row.names(AirPassengers)
x<-row.names(AirPassengers)
x
names(AirPassengers)
colNames(AirPassengers)
x<-airquality
x
names(x)
row.names(x)
m <- NULL
m
?NULL
x<-1:5
m<-x
m
?'<<-'
search()
?list
v1<-1:3
v1<-1:10
source('C:/Users/Allyas/datasciencecoursera/understandingassignment2.R')
source('C:/Users/Allyas/datasciencecoursera/understandingassignment2.R')
v1c<-makevector(v1)
v1c<-makeVector(v1)
v1c
source('C:/Users/Allyas/datasciencecoursera/understandingassignment2.R')
v1c
cachemean(v1c)
cachemean(v1c)
v2<-1:3
v2c<-makeVector(v2)
cachemean(v2c)
cachemean(v2c)
cachemean(v1c)
mean(v1c)
cachemean(v1c)
c3<-1:20
mean(c3)
source('C:/Users/Allyas/datasciencecoursera/understandingassignment2.R')
setwd("C:/Users/Allyas/datasciencecoursera")
source('C:/Users/Allyas/datasciencecoursera/rankall.R')
rankall("heart failure",5)
